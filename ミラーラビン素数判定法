struct Miller{
const vector<ll> v = { 2 , 7 , 61 };
ll modpow( ll x, ll k, ll m ){ll res = 1;
while( k ){if( k & 1 )res = res * x % m;
k /= 2;x = x * x % m;}return res;}
bool check(ll n ){
if( n < 2 )return false;
ll d = n - 1;ll s = 0;
while( d % 2 == 0 ){d /= 2;s++;}
for(ll a : v ){
if( a == n )return true;
    if( modpow( a , d , n ) != 1 ){bool ok = true;
for(ll r = 0; r < s; r++ ){
if( modpow( a, d * (1LL << r), n ) == n-1 ){ok = false;break;}}
if( ok ){return false;}}}
return true;}};Miller miller;

//miller.check(x)
int main(){
    cout<<miller.check(  )<<endl;
}
